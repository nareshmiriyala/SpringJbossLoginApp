<!--https://github.com/spring-projects/spring-security/blob/master/samples/preauth-xml/src/main/webapp/WEB-INF/applicationContext-security.xml-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
   <sec:http pattern="/login.jsp" security="none"></sec:http>
   <sec:http pattern="/errorpage.jsp" security="none"></sec:http>
    <sec:http auto-config='true'>
        <sec:intercept-url pattern="/resources/**" access="permitAll"/>
        <sec:intercept-url pattern="/WEB-INF/**" access="permitAll"/>
        <sec:intercept-url pattern="/auth/**" access="hasRole('Manager')"/>
    </sec:http>
    <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
        <sec:filter-chain-map request-matcher="ant">
            <sec:filter-chain pattern="/**" filters="sif,j2eePreAuthFilter,logoutFilter,etf,fsi"/>
        </sec:filter-chain-map>
    </bean>


    <bean id="sif" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref='preAuthenticatedAuthenticationProvider'/>
    </sec:authentication-manager>

    <bean id="preAuthenticatedAuthenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <property name="preAuthenticatedUserDetailsService" ref="preAuthenticatedUserDetailsService"/>
    </bean>

    <bean id="preAuthenticatedUserDetailsService"
            class="org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService"/>

    <bean id="j2eePreAuthFilter" class="org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationDetailsSource">
            <bean class="org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource">
                <property name="mappableRolesRetriever">
                    <bean class="org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever" />
                </property>
                <property name="userRoles2GrantedAuthoritiesMapper">
                    <bean class="org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper">
                        <property name="convertAttributeToUpperCase" value="true"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="preAuthenticatedProcessingFilterEntryPoint"
            class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="/"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="etf" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <constructor-arg ref="preAuthenticatedProcessingFilterEntryPoint"/>

        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/errorpage.jsp"/>
            </bean>
        </property>
    </bean>
    <!--&lt;!&ndash;<bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="rolePrefix" value="ROLE_"/>&ndash;&gt;-->
    <!--</bean>-->
    <bean id="httpRequestAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg>
            <list>
                <!--<ref bean="roleVoter"/>-->
                <ref bean="webExpressionVoter"/>
                <ref bean="authenticatedVoter"/>
            </list>
        </constructor-arg>
        <property name="allowIfAllAbstainDecisions" value="false"/>
    </bean>
    <bean id="webExpressionVoter"
          class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
    <bean id="authenticatedVoter"
          class="org.springframework.security.access.vote.AuthenticatedVoter" />

    <bean id="fsi" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="httpRequestAccessDecisionManager"/>

        <property name="securityMetadataSource">
            <sec:filter-security-metadata-source lowercase-comparisons="true" request-matcher="ant" use-expressions="true">
                <sec:intercept-url pattern="/login.jsp" access="permitAll"/>
                <sec:intercept-url pattern="/errorpage.jsp" access="permitAll"/>
                <sec:intercept-url pattern="/resources/**" access="permitAll"/>
                <sec:intercept-url pattern="/WEB-INF/**" access="permitAll"/>
                <sec:intercept-url pattern="/auth/**" access="isAuthenticated()"/>
            </sec:filter-security-metadata-source>
        </property>
    </bean>


    <bean id="securityContextHolderAwareRequestFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>

    <sec:global-method-security secured-annotations="enabled"/>

</beans>
